version: '3.8'
services:
  chat:
    entrypoint: /dockerize -wait tcp://db:5432 -wait tcp://message-broker:6379
    networks: [ broker, db ]
    expose: [ 80 ]
    ports: [ 80:80 ]
    restart: unless-stopped
    volumes:
      - type: bind
        source: ./docker/dockerize
        target: /dockerize
        read_only: true
    environment:
      APP_NAME: ${APP_NAME}
      FLYWAY_URL: jdbc:postgresql://db:5432/postgres
      FLYWAY_USER: postgres
      FLYWAY_PASSWORD: ${POSTGRES_PASSWORD}
      JWT_SECRET: ${JWT_SECRET}
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_URL: db:5432
      REDIS_URL: message-broker:6379
      SMTP_HOST: ${SMTP_HOST}
      SMTP_TLS_PORT: ${SMTP_TLS_PORT}
      SMTP_FROM: ${SMTP_FROM}
      SMTP_USERNAME: ${SMTP_USERNAME}
      SMTP_PASSWORD: ${SMTP_PASSWORD}
  db:
    image: postgres:12.4
    restart: unless-stopped
    expose: [ 5432 ]
    networks: [ db ]
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - type: volume
        source: db
        target: /var/lib/postgresql/data
  message-broker:
    image: redis:6.0.8
    restart: unless-stopped
    expose: [ 6379 ]
    networks: [ broker ]
    sysctls:
      net.core.somaxconn: 511
volumes:
  db:
networks:
  broker:
  db:
